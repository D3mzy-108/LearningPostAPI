# Generated by Django 4.2 on 2025-03-16 16:50

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover', models.ImageField(upload_to='book_covers/')),
                ('title', models.CharField(max_length=100)),
                ('author', models.CharField(max_length=200, null=True)),
                ('about', models.TextField(blank=True, null=True)),
                ('about_author', models.TextField(blank=True, null=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('bookmarked', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover', models.ImageField(upload_to='quest_covers/')),
                ('title', models.CharField(max_length=100)),
                ('grade', models.CharField(max_length=100)),
                ('category', models.CharField(default='', max_length=100, null=True)),
                ('time', models.IntegerField(verbose_name='Time per Question')),
                ('about', models.TextField(blank=True, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('bookmarked', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comprehension', models.TextField(blank=True, null=True)),
                ('diagram', models.ImageField(blank=True, null=True, upload_to='diagrams/')),
                ('question', models.TextField()),
                ('a', models.TextField()),
                ('b', models.TextField()),
                ('c', models.TextField()),
                ('d', models.TextField()),
                ('answer', models.TextField()),
                ('explanation', models.TextField()),
                ('topic', models.TextField(default='')),
                ('quest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='admin_app.quest')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan', models.CharField(max_length=20)),
                ('duration', models.IntegerField()),
                ('quest_price', models.IntegerField()),
                ('bookee_price', models.IntegerField()),
                ('akada_price', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_viewed', models.BooleanField(default=False)),
                ('feedback_type', models.CharField(choices=[('question_report', 'question_report'), ('help_desk', 'help_desk')], max_length=20, null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_app.question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='m_feedbacks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QuestRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField()),
                ('quest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rated_quests', to='admin_app.quest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='q_ratings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_answered', models.IntegerField()),
                ('correctly_answered', models.IntegerField()),
                ('wrongly_answered', models.IntegerField()),
                ('time', models.IntegerField(null=True)),
                ('date', models.DateField()),
                ('quest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_app.quest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='m_performance', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField()),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rated_books', to='admin_app.library')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='l_ratings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Leaderboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('streak', models.IntegerField(default=0)),
                ('questions_answered', models.IntegerField(default=0)),
                ('quest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quest_rankings', to='admin_app.quest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_rankings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('chapter_file', models.FileField(upload_to='chapters/', validators=[django.core.validators.FileExtensionValidator(['epub'])])),
                ('book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='admin_app.library')),
            ],
        ),
        migrations.CreateModel(
            name='AnsweredBy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answered_by', to='admin_app.question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answered', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
